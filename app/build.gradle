apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'AndResGuard'
apply plugin: 'kotlin-android-extensions'
android {

    signingConfigs {
        config {
            keyAlias 'goisp'
            keyPassword 'goisp2019'
            storeFile file('../go_isp.jks')
            storePassword 'goisp2019'
        }
    }

    compileSdkVersion 28
    defaultConfig {
        multiDexEnabled true
        applicationId "com.wangbin.go_isp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

    }
    loadSigningConfigs()
    buildTypes {
        debug {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //设置打包名称
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def apkFileName = "go_isp_${defaultConfig.versionName}_${releaseTime()}.apk"
                    outputFileName = apkFileName
                }
            }
            signingConfig signingConfigs.config
        }
    }
    greendao{
        schemaVersion 1
        targetGenDir 'src/main/java'
        daoPackage 'com.wangbin.go_isp.base.db'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    androidExtensions {
        experimental = true
    }
}
/**
* 加载签名配置文件
*/
def loadSigningConfigs() {
    def Properties props = new Properties()
    def propFile = file('../sign.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
            props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
        android.signingConfigs.debug.storeFile = file(props['RELEASE_STORE_FILE'])
        android.signingConfigs.debug.storePassword = props['RELEASE_STORE_PASSWORD']
        android.signingConfigs.debug.keyAlias = props['RELEASE_KEY_ALIAS']
        android.signingConfigs.debug.keyPassword = props['RELEASE_KEY_PASSWORD']
    } else {
        android.buildTypes.debug.signingConfig = null
    }
} else {
    android.buildTypes.debug.signingConfig = null
}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:multidex:1.0.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    //loading库
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'
    // butterknife
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    //RecycleView万能适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    //下拉刷新控件
    implementation 'com.blankj:utilcode:1.19.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    //EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.contrarywind:Android-PickerView:4.1.8'
    // add library
    implementation project(':basekit')
}
def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH_mm_ss")
}


andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // it will keep the origin path of your resources when it's true
    keepRoot = false

    whiteList = [
            // your icon
            "R.drawable.ic_launcher",
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.15'
        //path = "/usr/local/bin/7za"
    }
}